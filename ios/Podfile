# Platform and Environment Configuration
platform :ios, '15.0'

# Disable CocoaPods stats for privacy
ENV['COCOAPODS_DISABLE_STATS'] = 'true'

# Flutter project configuration
project 'Runner', {
  'Debug' => :debug,
  'Profile' => :release,
  'Release' => :release,
}

# Flutter root helper function
def flutter_root
  generated_xcode_build_settings_path = File.expand_path(File.join('..', 'Flutter', 'Generated.xcconfig'), __FILE__)
  unless File.exist?(generated_xcode_build_settings_path)
    raise "#{generated_xcode_build_settings_path} must exist. If you're running pod install manually, make sure flutter pub get is executed first"
  end

  File.foreach(generated_xcode_build_settings_path) do |line|
    matches = line.match(/FLUTTER_ROOT\=(.*)/)
    return matches[1].strip if matches
  end
  raise "FLUTTER_ROOT not found in #{generated_xcode_build_settings_path}. Try deleting Flutter/Generated.xcconfig and running flutter pub get again."
end

# Import the Flutter iOS pod helper
require File.expand_path(File.join('packages', 'flutter_tools', 'bin', 'podhelper'), flutter_root)

# Setup Flutter iOS pod
flutter_ios_podfile_setup

# Target configuration for the 'Runner' target
target 'Runner' do
  # Use static frameworks instead of dynamic ones
  use_frameworks! :linkage => :static  # CHANGE: Use static frameworks
  use_modular_headers!

  # Flutter installs all necessary iOS pods automatically
  flutter_install_all_ios_pods File.dirname(File.realpath(__FILE__))
end

# Post-install configuration to modify build settings
post_install do |installer|
  installer.pods_project.targets.each do |target|
    # Ensure Flutter-specific build settings are applied
    flutter_additional_ios_build_settings(target)

    # Custom build settings per target
    target.build_configurations.each do |config|
      config.build_settings['SWIFT_VERSION'] = '5.0'  # Ensure Swift version is set
      config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '15.0'  # Target iOS 15.0
      config.build_settings['ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES'] = 'NO'  # Swift standard libraries not embedded
      config.build_settings['BUILD_LIBRARY_FOR_DISTRIBUTION'] = 'YES'  # Ensure frameworks are built for distribution

      # Adjust optimization level for previews (important for SwiftUI)
      config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-Onone'  # Disable optimizations for previews and debugging

      # Optional: To prevent warnings related to symlink creation
      if target.name == 'BoringSSL-GRPC'
        config.build_settings['SWIFT_OPTIMIZATION_LEVEL'] = '-O'  # Set optimization level to -O for production builds
      end
    end
  end
end